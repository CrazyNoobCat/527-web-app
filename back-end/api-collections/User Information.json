{
	"info": {
		"_postman_id": "0a97536e-ade5-4651-ae12-3e109c04a73f",
		"name": "User Information",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "29195322-0a97536e-ade5-4651-ae12-3e109c04a73f"
	},
	"item": [
		{
			"name": "Add movie to watch list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c12dc6f-1c6f-4b5a-8da3-c09d7aa63219",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "ce0304cf-d855-496f-b7ea-8448228d0b8d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": \"2001\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/v1/users/watch/list",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"v1",
						"users",
						"watch",
						"list"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": [
				{
					"id": "6820526d-6c44-4614-bbc5-86ed67322ab6",
					"name": "201",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": \"2001\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/users/watch/list",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"users",
								"watch",
								"list"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				},
				{
					"id": "817c48a3-ff0f-4060-9f9d-e6911c2fab4c",
					"name": "400",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": \"2001\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/users/watch/list",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"users",
								"watch",
								"list"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"name": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"id": "1fdc85bf-7ac8-4618-aabf-b3ff3bd56a92",
					"name": "409",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": \"2001\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/users/watch/list",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"users",
								"watch",
								"list"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Add movie to watch history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c12dc6f-1c6f-4b5a-8da3-c09d7aa63219",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "644a2a56-42db-4dee-a490-7a569b1b46a2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": \"2001\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/v1/users/watch/history",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"v1",
						"users",
						"watch",
						"history"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": [
				{
					"id": "71f87961-5e76-4a54-9721-1a3b8f6a49ee",
					"name": "201",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": \"2001\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/users/watch/history",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"users",
								"watch",
								"history"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				},
				{
					"id": "c42b3ba3-feb5-4a73-a213-5112308524bf",
					"name": "400",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": \"2001\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/users/watch/history",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"users",
								"watch",
								"history"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"name": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"id": "85118a44-1d01-4d4a-89db-9f70cb838ab5",
					"name": "409",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": \"2001\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/users/watch/history",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"users",
								"watch",
								"history"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "User Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ff6a1410-57f6-454e-89ae-9ff19067a010",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "9b7bc242-884a-4fa5-91ee-f5154ac36e2a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/v1/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"v1",
						"users"
					]
				}
			},
			"response": [
				{
					"id": "9a42ee48-f680-48d6-8edd-2229901472fe",
					"name": "201",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v1/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"users"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"name": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n  \"username\": \"bestUser\",\r\n  \"email\": \"best@bestemail.com\"\r\n}"
				},
				{
					"id": "adabe195-91e8-45cb-b497-768d92d8a8db",
					"name": "400",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v1/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"users"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"name": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"id": "f459f734-d900-4be9-a309-6ade783c7e0a",
					"name": "401",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v1/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"users"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Watch list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ff6a1410-57f6-454e-89ae-9ff19067a010",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "56138419-e1b2-4751-8d63-0e18c15dd39e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/v1/users/watch/list?limit=50&page=0",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"v1",
						"users",
						"watch",
						"list"
					],
					"query": [
						{
							"key": "limit",
							"value": "50"
						},
						{
							"key": "page",
							"value": "0"
						}
					]
				}
			},
			"response": [
				{
					"id": "3cd066cf-d747-482c-b216-8dc32ebc3ca1",
					"name": "200",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v1/users/watch/list?limit=50&page=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"users",
								"watch",
								"list"
							],
							"query": [
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"name": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "[\r\n  {\r\n    \"id\": \"120591\",\r\n    \"name\": \"Golden Eye\",\r\n    \"description\": \"James Bond hunts down the bad guys\",\r\n    \"categories\": [\r\n      \"Horror\",\r\n      \"Comedy\"\r\n    ],\r\n    \"releaseDate\": \"2016-08-29\",\r\n    \"director\": {\r\n      \"name\": \"Best Director\"\r\n    }\r\n  },\r\n  {\r\n    \"id\": \"141\",\r\n    \"name\": \"Harry Potter\",\r\n    \"description\": \"Harry becomes a wizard\",\r\n    \"categories\": [\r\n      \"Sci-fi\",\r\n      \"Comedy\"\r\n    ],\r\n    \"releaseDate\": \"2012-04-01\",\r\n    \"director\": {\r\n      \"name\": \"A Director\"\r\n    }\r\n  }\r\n]"
				},
				{
					"id": "8665463a-786f-4498-aabd-857ba55d2cd2",
					"name": "500",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v1/users/watch/list?limit=50&page=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"users",
								"watch",
								"list"
							],
							"query": [
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Watch history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ff6a1410-57f6-454e-89ae-9ff19067a010",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "c1f89b3d-e197-4ed7-848c-e7ceae6e330e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/v1/users/watch/history?limit=50&page=0",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"v1",
						"users",
						"watch",
						"history"
					],
					"query": [
						{
							"key": "limit",
							"value": "50"
						},
						{
							"key": "page",
							"value": "0"
						}
					]
				}
			},
			"response": [
				{
					"id": "16e7b2f9-6cd0-450c-ae21-9d2ca2be7ac6",
					"name": "200",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v1/users/watch/history?limit=50&page=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"users",
								"watch",
								"history"
							],
							"query": [
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"name": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "[\r\n  {\r\n    \"id\": \"120591\",\r\n    \"name\": \"Golden Eye\",\r\n    \"description\": \"James Bond hunts down the bad guys\",\r\n    \"categories\": [\r\n      \"Horror\",\r\n      \"Comedy\"\r\n    ],\r\n    \"releaseDate\": \"2016-08-29\",\r\n    \"director\": {\r\n      \"name\": \"Best Director\"\r\n    }\r\n  },\r\n  {\r\n    \"id\": \"141\",\r\n    \"name\": \"Harry Potter\",\r\n    \"description\": \"Harry becomes a wizard\",\r\n    \"categories\": [\r\n      \"Sci-fi\",\r\n      \"Comedy\"\r\n    ],\r\n    \"releaseDate\": \"2012-04-01\",\r\n    \"director\": {\r\n      \"name\": \"A Director\"\r\n    }\r\n  }\r\n]"
				},
				{
					"id": "8c96d93e-6f5f-46bb-ba4d-7866b2bdacda",
					"name": "500",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v1/users/watch/history?limit=50&page=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"users",
								"watch",
								"history"
							],
							"query": [
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Create new account",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c12dc6f-1c6f-4b5a-8da3-c09d7aa63219",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "6525de1c-7393-405e-b0b3-f2c48af9e82f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"bestUser\",\n    \"email\": \"best@bestemail.com\",\n    \"password\": \"password-to-be-hashed\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/v1/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"v1",
						"users"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": [
				{
					"id": "635b2593-0f10-4d39-8f50-dc609e2d2e8f",
					"name": "201",
					"originalRequest": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"bestUser\",\n    \"email\": \"best@bestemail.com\",\n    \"password\": \"password-to-be-hashed\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"users"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				},
				{
					"id": "0422cb00-1c0e-49c8-8168-3805ccb6c183",
					"name": "400",
					"originalRequest": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"bestUser\",\n    \"email\": \"best@bestemail.com\",\n    \"password\": \"password-to-be-hashed\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"users"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"name": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"id": "889259d2-8879-4082-a888-5773800ba527",
					"name": "409",
					"originalRequest": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"bestUser\",\n    \"email\": \"best@bestemail.com\",\n    \"password\": \"password-to-be-hashed\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"users"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		}
	],
	"auth": {
		"type": "jwt",
		"jwt": [
			{
				"key": "algorithm",
				"value": "HS256",
				"type": "string"
			},
			{
				"key": "isSecretBase64Encoded",
				"value": false,
				"type": "boolean"
			},
			{
				"key": "payload",
				"value": "{}",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			},
			{
				"key": "headerPrefix",
				"value": "Bearer",
				"type": "string"
			},
			{
				"key": "queryParamKey",
				"value": "token",
				"type": "string"
			},
			{
				"key": "header",
				"value": "{}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "02c779bf-44ac-4d19-9514-e7060f157371",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "1de5935a-e237-4492-839e-95a14e54f6ca",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}