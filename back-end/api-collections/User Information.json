{
	"info": {
		"_postman_id": "0a97536e-ade5-4651-ae12-3e109c04a73f",
		"name": "User Information",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "29195322-0a97536e-ade5-4651-ae12-3e109c04a73f"
	},
	"item": [
		{
			"name": "Add movie to watch list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c12dc6f-1c6f-4b5a-8da3-c09d7aa63219",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "ce0304cf-d855-496f-b7ea-8448228d0b8d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": \"1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.cinemate.link/users/watch/list",
					"protocol": "https",
					"host": [
						"api",
						"cinemate",
						"link"
					],
					"path": [
						"users",
						"watch",
						"list"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Add movie to watch history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c12dc6f-1c6f-4b5a-8da3-c09d7aa63219",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "644a2a56-42db-4dee-a490-7a569b1b46a2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": \"12\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.cinemate.link/users/watch/history",
					"protocol": "https",
					"host": [
						"api",
						"cinemate",
						"link"
					],
					"path": [
						"users",
						"watch",
						"history"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "User Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ff6a1410-57f6-454e-89ae-9ff19067a010",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "9b7bc242-884a-4fa5-91ee-f5154ac36e2a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.cinemate.link/users",
					"protocol": "https",
					"host": [
						"api",
						"cinemate",
						"link"
					],
					"path": [
						"users"
					]
				}
			},
			"response": [
				{
					"id": "86df18fb-3341-4a67-9a39-7f15ed5f80d7",
					"name": "User Details",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.cinemate.link/users",
							"protocol": "https",
							"host": [
								"api",
								"cinemate",
								"link"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"name": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"username\": \"freddy_123\",\r\n    \"email\": \"freddy@ydderf.com\"\r\n}"
				}
			]
		},
		{
			"name": "Watch list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ff6a1410-57f6-454e-89ae-9ff19067a010",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "56138419-e1b2-4751-8d63-0e18c15dd39e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.cinemate.link/users/watch/list?limit=2&page=1",
					"protocol": "https",
					"host": [
						"api",
						"cinemate",
						"link"
					],
					"path": [
						"users",
						"watch",
						"list"
					],
					"query": [
						{
							"key": "limit",
							"value": "2"
						},
						{
							"key": "page",
							"value": "1"
						}
					]
				}
			},
			"response": [
				{
					"id": "5151fe99-b173-4381-905e-53dc4d4190de",
					"name": "Watch list",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.cinemate.link/users/watch/list?limit=2&page=1",
							"protocol": "https",
							"host": [
								"api",
								"cinemate",
								"link"
							],
							"path": [
								"users",
								"watch",
								"list"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Sat, 09 Sep 2023 23:10:40 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "1190"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-amzn-RequestId",
							"value": "154143be-22cb-4ccb-879f-f51003f76700"
						},
						{
							"key": "x-amz-apigw-id",
							"value": "LAw5jEaoSwMFyMw="
						},
						{
							"key": "X-Amzn-Trace-Id",
							"value": "Root=1-64fcfb70-3694789503e4bbf643a649fc;Sampled=0;lineage=3e706d6b:0"
						}
					],
					"cookie": [],
					"body": "{\n    \"movies\": [\n        {\n            \"id\": \"1168333\",\n            \"title\": \"Home\",\n            \"release_date\": \"6/09/2023\",\n            \"genre\": \"Drama,Crime\",\n            \"summary\": \"Yair, an ultra-Orthodox Yeshiva student, opens an electronics shop in Geula, a neighborhood that is the shopping epicenter for the entire ultra-Orthodox community in Jerusalem. The religious character of the neighborhood is enforced by the Geula Committee and Yair strictly adheres to their rules. His shop is introducing a world of advanced technology that overnight becomes a magnet for every ultra-Orthodox household, but the increasing intrusion of modernity is an affront to the committee, leading to an inevitable conflict that forces Yair into a desperate struggle for survival.\",\n            \"language\": \"Hebrew\",\n            \"budget\": \"1400000\",\n            \"revenue\": \"0\",\n            \"runtime\": \"111\"\n        },\n        {\n            \"id\": \"129\",\n            \"title\": \"Spirited Away\",\n            \"release_date\": \"20/07/2001\",\n            \"genre\": \"Animation,Family,Fantasy\",\n            \"summary\": \"A young girl, Chihiro, becomes trapped in a strange new world of spirits. When her parents undergo a mysterious transformation, she must call upon the courage she never knew she had to free her family.\",\n            \"language\": \"Japanese\",\n            \"budget\": \"19000000\",\n            \"revenue\": \"274925095\",\n            \"runtime\": \"125\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Watch history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ff6a1410-57f6-454e-89ae-9ff19067a010",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "c1f89b3d-e197-4ed7-848c-e7ceae6e330e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.cinemate.link/users/watch/history?limit=50&page=1",
					"protocol": "https",
					"host": [
						"api",
						"cinemate",
						"link"
					],
					"path": [
						"users",
						"watch",
						"history"
					],
					"query": [
						{
							"key": "limit",
							"value": "50"
						},
						{
							"key": "page",
							"value": "1"
						}
					]
				}
			},
			"response": [
				{
					"id": "3800cfde-5359-4bee-8f8a-c77d5b3ba3cc",
					"name": "Watch history",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.cinemate.link/users/watch/history?limit=50&page=1",
							"protocol": "https",
							"host": [
								"api",
								"cinemate",
								"link"
							],
							"path": [
								"users",
								"watch",
								"history"
							],
							"query": [
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Sat, 09 Sep 2023 23:10:51 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "957"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-amzn-RequestId",
							"value": "c4bcb9db-3c5f-4f82-91c9-0b227594e8db"
						},
						{
							"key": "x-amz-apigw-id",
							"value": "LAw7XH6eSwMFdZA="
						},
						{
							"key": "X-Amzn-Trace-Id",
							"value": "Root=1-64fcfb7b-4a12850c76990518766e7c7e;Sampled=0;lineage=3e706d6b:0"
						}
					],
					"cookie": [],
					"body": "{\n    \"movies\": [\n        {\n            \"id\": \"12\",\n            \"title\": \"Finding Nemo\",\n            \"release_date\": \"30/05/2003\",\n            \"genre\": \"Animation,Family\",\n            \"summary\": \"Nemo, an adventurous young clownfish, is unexpectedly taken from his Great Barrier Reef home to a dentist's office aquarium. It's up to his worrisome father Marlin and a friendly but forgetful fish Dory to bring Nemo home -- meeting vegetarian sharks, surfer dude turtles, hypnotic jellyfish, hungry seagulls, and more along the way.\",\n            \"language\": \"English\",\n            \"budget\": \"94000000\",\n            \"revenue\": \"940335536\",\n            \"runtime\": \"100\"\n        },\n        {\n            \"id\": \"129\",\n            \"title\": \"Spirited Away\",\n            \"release_date\": \"20/07/2001\",\n            \"genre\": \"Animation,Family,Fantasy\",\n            \"summary\": \"A young girl, Chihiro, becomes trapped in a strange new world of spirits. When her parents undergo a mysterious transformation, she must call upon the courage she never knew she had to free her family.\",\n            \"language\": \"Japanese\",\n            \"budget\": \"19000000\",\n            \"revenue\": \"274925095\",\n            \"runtime\": \"125\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Create new account",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c12dc6f-1c6f-4b5a-8da3-c09d7aa63219",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "6525de1c-7393-405e-b0b3-f2c48af9e82f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"bestUser2\",\n    \"email\": \"best@bestemail.com\",\n    \"password\": \"password-to-be-hashed\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.cinemate.link/users/register",
					"protocol": "https",
					"host": [
						"api",
						"cinemate",
						"link"
					],
					"path": [
						"users",
						"register"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Login",
			"id": "21f2dc9f-437e-4bf5-baee-69b3b200fb24",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"bestUser\",\r\n    \"password\": \"password-to-be-hashed\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.cinemate.link/users/login",
					"protocol": "https",
					"host": [
						"api",
						"cinemate",
						"link"
					],
					"path": [
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "User Reviews",
			"id": "236135ed-d7a7-47fb-85b0-cd97445167bb",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.cinemate.link/users/reviews?id=&limit=50&page=0",
					"protocol": "https",
					"host": [
						"api",
						"cinemate",
						"link"
					],
					"path": [
						"users",
						"reviews"
					],
					"query": [
						{
							"key": "id",
							"value": "",
							"description": "movie id, if specified will only retrieve this review"
						},
						{
							"key": "limit",
							"value": "50"
						},
						{
							"key": "page",
							"value": "0"
						}
					]
				}
			},
			"response": [
				{
					"id": "e903a1a1-631a-4812-8baf-8707a3376c8d",
					"name": "User Reviews",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.cinemate.link/users/reviews?id=&limit=50&page=0",
							"protocol": "https",
							"host": [
								"api",
								"cinemate",
								"link"
							],
							"path": [
								"users",
								"reviews"
							],
							"query": [
								{
									"key": "id",
									"value": "",
									"description": "movie id, if specified will only retrieve this review"
								},
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Sun, 10 Sep 2023 07:45:49 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "1275"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "x-amzn-RequestId",
							"value": "bfbdf4d8-543c-44c5-a25f-cb2fbf38563a"
						},
						{
							"key": "x-amz-apigw-id",
							"value": "LB8XEFYtywMFdcA="
						},
						{
							"key": "X-Amzn-Trace-Id",
							"value": "Root=1-64fd742c-4170654169ae4f852bbfc21b;Sampled=0;lineage=3e706d6b:0"
						}
					],
					"cookie": [],
					"body": "{\n    \"reviews\": [\n        {\n            \"movie\": {\n                \"id\": \"12\",\n                \"title\": \"Finding Nemo\",\n                \"release_date\": \"30/05/2003\",\n                \"genre\": \"Animation,Family\",\n                \"summary\": \"Nemo, an adventurous young clownfish, is unexpectedly taken from his Great Barrier Reef home to a dentist's office aquarium. It's up to his worrisome father Marlin and a friendly but forgetful fish Dory to bring Nemo home -- meeting vegetarian sharks, surfer dude turtles, hypnotic jellyfish, hungry seagulls, and more along the way.\",\n                \"language\": \"English\",\n                \"budget\": \"94000000\",\n                \"revenue\": \"940335536\",\n                \"runtime\": \"100\"\n            },\n            \"username\": \"bestUser\",\n            \"summary\": \"This is the users review of the movie\",\n            \"rating\": \"4\"\n        },\n        {\n            \"movie\": {\n                \"id\": \"11\",\n                \"title\": \"Star Wars\",\n                \"release_date\": \"25/05/1977\",\n                \"genre\": \"Adventure,Action,Science Fiction\",\n                \"summary\": \"Princess Leia is captured and held hostage by the evil Imperial forces in their effort to take over the galactic Empire. Venturesome Luke Skywalker and dashing captain Han Solo team together with the loveable robot duo R2-D2 and C-3PO to rescue the beautiful princess and restore peace and justice in the Empire.\",\n                \"language\": \"English\",\n                \"budget\": \"11000000\",\n                \"revenue\": \"775398007\",\n                \"runtime\": \"121\"\n            },\n            \"username\": \"bestUser\",\n            \"summary\": \"This is the users review of the movie\",\n            \"rating\": \"4\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Add Review",
			"id": "21de73fc-febc-4bf6-9ef1-fcb49769df61",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 11,\r\n    \"summary\": \"This is the users review of the movie\",\r\n    \"rating\": 4\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.cinemate.link/users/reviews",
					"protocol": "https",
					"host": [
						"api",
						"cinemate",
						"link"
					],
					"path": [
						"users",
						"reviews"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Review",
			"id": "87780cbe-15f8-4ca3-9690-8182ad554c1a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.cinemate.link/users/reviews?id=123123",
					"protocol": "https",
					"host": [
						"api",
						"cinemate",
						"link"
					],
					"path": [
						"users",
						"reviews"
					],
					"query": [
						{
							"key": "id",
							"value": "123123",
							"description": "movie id"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Watched Movie",
			"id": "782c5b31-7840-4d1e-88ec-de5fd1a72c05",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.cinemate.link/users/watch/history?id=12",
					"protocol": "https",
					"host": [
						"api",
						"cinemate",
						"link"
					],
					"path": [
						"users",
						"watch",
						"history"
					],
					"query": [
						{
							"key": "id",
							"value": "12",
							"description": "movie id",
							"type": "text"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Movie from Watch List",
			"id": "67f74d6f-0158-41ba-9572-796196daae9a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.cinemate.link/users/watch/list?id=129",
					"protocol": "https",
					"host": [
						"api",
						"cinemate",
						"link"
					],
					"path": [
						"users",
						"watch",
						"list"
					],
					"query": [
						{
							"key": "id",
							"value": "129",
							"description": "movie id",
							"type": "text"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImJlc3RVc2VyIiwiZXhwIjoxNjk0MzM1NTEyfQ.xQaJB39IpNtHZlM0ovtWSU6IRvcyIS33Oc2DE6F82ZE",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "c39eadec-8ef6-44d6-94d0-eef9c20f90a7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "db19f3d1-5d09-4b47-a9ac-7cc39985748b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}